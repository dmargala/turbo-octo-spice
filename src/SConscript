import os

common_libs = ['likely', 'cosmo', 'boost_program_options']

## Compile C++ programs
opt = Environment(CCFLAGS = '-O2')
bucketxi = opt.Program('#bin/bucketxi', 'bucketxi.cc', LIBS=common_libs)
kdtreetest = opt.Program('#bin/kdtreetest', 'kdtreetest.cc', LIBS=common_libs + ['kdtree'])

## Compile CUDA programs

#env['BUILDERS']['CudaProgram'] = Builder(action = '/usr/local/cuda/bin/nvcc -m64 -arch=sm_20 -o $TARGET $SOURCE $LIBS', src_suffix = '.cu', suffix = '')
# Need to propagate environment path so scons can find the nvcc compile
cudaEnv = Environment(ENV={'PATH' : os.environ['PATH']})
cudaEnv.Replace(CC='nvcc')
# Atomic add requires minimum architecture
cudaEnv.Append(LINKFLAGS='-m64 -arch=sm_20')
cudaEnv.Program('#bin/deviceQuery', 'deviceQuery.cu')
cudaEnv.Program('#bin/gpuxi', 'gpuxi.cu', LIBS=common_libs)

# Custom install directory

#prefix = "/usr/local"
#install_programs = [bucketxi, kdtreetest]
#env.Alias('install', env.Install(os.path.join(prefix, "bin"), install_programs))